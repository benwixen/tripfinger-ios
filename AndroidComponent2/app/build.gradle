apply plugin: 'com.android.application'

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.2"
  defaultConfig {
    applicationId "com.tripfinger.androidcomponent2"
    minSdkVersion 16
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    ndk {
      abiFilters 'armeabi-v7a', 'x86'
    }
    externalNativeBuild {
      cmake {
        cppFlags "-std=c++11 -frtti -fexceptions -DDEBUG=1"
        arguments "-DANDROID_STL=c++_static"
      }
    }
  }
  sourceSets.main {
    // assets folder is auto-generated by tools/android/update_assets.sh, so we keep all static resources in separate folders.
    assets.srcDirs = ['assets', 'mwm-ttf-assets']
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  aaptOptions {
    noCompress 'txt', 'bin', 'html', 'png', 'json', 'mwm', 'ttf', 'sdf', 'ui', 'config'
    ignoreAssetsPattern "!.svn:!.git:!.DS_Store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"
  }
  externalNativeBuild {
    cmake {
      path "CMakeLists.txt"
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile 'com.android.support:appcompat-v7:23.4.0'
  testCompile 'junit:junit:4.12'
}


task cppBuild(type:Exec) {
  def args = ['bash', '../../tools/autobuild/android.sh', 'debug', 'x86']
  commandLine args
}

//tasks.withType(JavaCompile) { compileTask ->
//  compileTask.dependsOn cppBuild
//}

//preBuild.dependsOn(cppBuild)